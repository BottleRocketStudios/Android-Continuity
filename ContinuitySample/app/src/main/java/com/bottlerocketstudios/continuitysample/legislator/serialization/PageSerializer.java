package com.bottlerocketstudios.continuitysample.legislator.serialization;

import com.bottlerocketstudios.continuitysample.legislator.model.Page;

import org.json.JSONException;
import org.json.JSONObject;

/**
 * Automatically generated by jsonGenerator.py
 */
public class PageSerializer {
    private static final String TAG = PageSerializer.class.getSimpleName();
    
    private static final String OBJECT_NAME = "page";
        
    private static final String FIELD_COUNT = "count";
    private static final String FIELD_PER_PAGE = "per_page";
    private static final String FIELD_PAGE = "page";
    
    public static String getObjectName() {
        return OBJECT_NAME;
    }
    
    public static Page parseJsonObject(JSONObject json) throws JSONException {
        if (json == null) return null;
        Page page = new Page();

        page.setCount(json.getLong(FIELD_COUNT));
        page.setPerPage(json.getLong(FIELD_PER_PAGE));
        page.setPage(json.getLong(FIELD_PAGE));

        return page;
    }

    public static JSONObject toJsonObject(Page serializableObject) throws JSONException {
        JSONObject obj = new JSONObject();
        obj.put(FIELD_COUNT, serializableObject.getCount());
        obj.put(FIELD_PER_PAGE, serializableObject.getPerPage());
        obj.put(FIELD_PAGE, serializableObject.getPage());
        return obj;
    }
   
}

